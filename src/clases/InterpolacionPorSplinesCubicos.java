/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package clases;

import java.awt.Desktop;
import java.io.File;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import javax.swing.JLabel;
import javax.swing.JLayeredPane;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import org.nfunk.jep.JEP;
import org.nfunk.jep.Node;
import org.lsmp.djep.sjep.PolynomialCreator;
import org.lsmp.djep.xjep.XJep;

/**
 * para realiar la grafica de interpolacion se hace uso de la s librerias
 * jmathplot y jmatharray
 *
 * @author Darwin
 */
public class InterpolacionPorSplinesCubicos extends javax.swing.JFrame {

    private static int i, n;
    public double componenteX[];
    public double componenteY[];
    public static double dj[], cj[], bj[];

    public static int getN() {
        return n;
    }

    public static void setN(int n) {
        InterpolacionPorSplinesCubicos.n = n;
    }

    public int getI() {
        return i;
    }

    public void setI(int i) {
        this.i = i;
    }

    /**
     * Creates new form InterpolacionPorSplinesCubicos
     */
    public InterpolacionPorSplinesCubicos() {
        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);
        ((JPanel) getContentPane()).setOpaque(false);
        JLabel fondo = new JLabel();
        getLayeredPane().add(fondo, JLayeredPane.FRAME_CONTENT_LAYER);
        Polynomial();
        // al inicio del programa se muestran las casillas descativadas
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea = new javax.swing.JTextArea();
        jLabel10 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        cmbPuntos = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        cmbGrado = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImages(null);

        jPanel2.setBackground(new java.awt.Color(102, 102, 255));
        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        jPanel2.setForeground(new java.awt.Color(102, 102, 102));
        jPanel2.setOpaque(false);
        jPanel2.setLayout(null);

        jPanel4.setLayout(null);
        jPanel4.add(jSeparator1);
        jSeparator1.setBounds(10, 100, 0, 2);
        jPanel4.add(jSeparator2);
        jSeparator2.setBounds(10, 100, 990, 10);

        jTextArea.setEditable(false);
        jTextArea.setColumns(20);
        jTextArea.setRows(5);
        jScrollPane1.setViewportView(jTextArea);

        jPanel4.add(jScrollPane1);
        jScrollPane1.setBounds(10, 140, 560, 210);

        jLabel10.setText("Ejercicio:");
        jPanel4.add(jLabel10);
        jLabel10.setBounds(60, 10, 60, 50);

        jButton3.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jButton3.setText("Salir");
        jButton3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton3);
        jButton3.setBounds(210, 380, 130, 50);

        jLabel12.setText("Polinomios ");
        jPanel4.add(jLabel12);
        jLabel12.setBounds(240, 110, 60, 30);

        cmbPuntos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione un ejercicio", "Ejercicio 5", "Ejercicio 7" }));
        cmbPuntos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbPuntosActionPerformed(evt);
            }
        });
        jPanel4.add(cmbPuntos);
        cmbPuntos.setBounds(130, 20, 320, 20);

        jLabel1.setText("Grado:");
        jPanel4.add(jLabel1);
        jLabel1.setBounds(60, 60, 33, 14);

        cmbGrado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione el grado", "Grado 1", "Grado 2", "Grado 3" }));
        cmbGrado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbGradoActionPerformed(evt);
            }
        });
        jPanel4.add(cmbGrado);
        cmbGrado.setBounds(130, 60, 130, 20);

        jPanel2.add(jPanel4);
        jPanel4.setBounds(10, 10, 580, 470);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 33, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void cmbPuntosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbPuntosActionPerformed

        if (cmbPuntos.getSelectedIndex() == 1) {
            jTextArea.setText("");
            cmbGrado.setEnabled(true);
            cmbGrado.setSelectedIndex(0);
        } else if (cmbPuntos.getSelectedIndex() == 2) {
            jTextArea.setText("");
            this.componenteX = new double[]{-1, 0, 2};
            this.componenteY = new double[]{-6, 9, 6};
            splines(3, 3);
//            cmbGrado.setEnabled(false);
//            cmbGrado.setSelectedIndex(3);
        }
    }//GEN-LAST:event_cmbPuntosActionPerformed

    private void cmbGradoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbGradoActionPerformed
        switch (cmbGrado.getSelectedIndex()) {
            case 1:
                jTextArea.setText("");
                this.componenteX = new double[]{0, 1, 2, 3};
                this.componenteY = new double[]{-1, 6, 31, 98};
                splines(4, 1);
                break;
            case 2:
                jTextArea.setText("");
                this.componenteX = new double[]{0, 1, 2, 3};
                this.componenteY = new double[]{-1, 6, 31, 98};
                splines(4, 2);
                break;
            case 3:
                jTextArea.setText("");
                this.componenteX = new double[]{0, 1, 2, 3};
                this.componenteY = new double[]{-1, 6, 31, 98};
                splines(4, 3);
                break;
        }
    }//GEN-LAST:event_cmbGradoActionPerformed

    public void splines(int n1, int grado) {
        try {
            int puntos = n1;
            String puntosSr[] = new String[puntos];
            String punto;
            double x[] = this.componenteX;// arreglo que almacena las componentes x de los puntos ingresados
            double y[] = this.componenteY;// arreglo que almacena las componentes Y de los puntos ingresados

            // AC=b
            double h[] = new double[puntos];

            for (int i = 0; i < puntos - 1; i++) {
                h[i] = x[i + 1] - x[i];
            }

            double b[] = new double[puntos];

            /**
             * paso a cargar la matriz b |- -| | 0 | | 3(x2-x1)/h1 - 3(x1-x0)/h0
             * | | . | | . | | . | =b, con i=0,...,n-1 | . | | 3(Xn -
             * Xn-1)/(hn-1) - 3(Xn-1 - Xn-2)/(hn-2) | | 0 | |- -|(n+1)x1
             */
            b[0] = 0;
            b[puntos - 1] = 0;
            for (int i = 1; i < puntos - 1; i++) {
                b[i] = ((3 / h[i]) * (y[i + 1] - y[i])) - ((3 / h[i - 1]) * (y[i] - y[i - 1]));

            }// fin cargar matriz b

            // 
            double matrizA[][] = new double[puntos][puntos];// de orden nxn, con i=0,...,n-1
            /**
             * |- -| | 1 0 ................................. 0 | | h0 2(h0+h1)
             * h1 ................ 0 | | 0 h1 2(h1+h2) h2 ................ 0 | |
             * 0 0 ..................... . 0 1 | | 0 0 hn-2 2(hn-2 +hn-1) hn-1 |
             * |- -| (n+1)x(n+1)
             *
             * A=matrizA, con i=0,...,n-1 *
             */
            matrizA[0][0] = 1;
            matrizA[puntos - 1][puntos - 1] = 1;

            for (int i = 1; i < puntos; i++) {
                matrizA[0][i] = 0;
            }
            for (int i = 0; i < puntos - 1; i++) {
                matrizA[puntos - 1][i] = 0;
            }

            // paso a cargar la matrizA  desde la fila i asta la fila n,  con  i=1,...n
            for (int i = 1; i < puntos; i++) {
                for (int j = 1; j < puntos - 1; j++) {

                    if (i == j) {
                        matrizA[i][j - 1] = h[j - 1];
                        matrizA[i][j] = 2 * (h[j - 1] + h[j]);
                        matrizA[i][j + 1] = h[j];
                    }

                }// fin buqle j

            }// fin bucle i
            // fin cargar la matirzA 

            /**
             * la matrizA1 es de dimension (puntos-2)x(puntos-2), usada para
             * resolver el sistema de e uaciones para en contrar las incognitas
             * cj de la matriz C Note que por las condiciones de frotera las
             * componentes Cjo=0 y Cjn=0
             */
            double matrizA1[][] = new double[puntos - 2][puntos - 2];
            for (int i = 0; i < puntos - 2; i++) {
                for (int j = 0; j < puntos - 2; j++) {
                    matrizA1[i][j] = matrizA[i + 1][j + 1];
                }// fin buqle j
            }// bucle i

            int n = puntos - 2;
            double r[] = new double[n];// carreglo que almacenara los valores de Cji  desde i=1,...,n-2
            for (int l = 0; l < n; l++) {
                r[l] = b[l + 1];

            }

            /**
             * acontinuacion usamos el metodo de caus jordan para encontar los
             * valores de Cji desde i=1,...,n-2
             */
            double d, c1;
            for (int i = 0; i <= n - 1; i++) {
                d = matrizA1[i][i];
                for (int s = 0; s <= n - 1; s++) {
                    matrizA1[i][s] = ((matrizA1[i][s]) / d);
                }
                r[i] = ((r[i]) / d);
                for (int x1 = 0; x1 <= n - 1; x1++) {
                    if (i != x1) {
                        c1 = matrizA1[x1][i];
                        for (int y1 = 0; y1 <= n - 1; y1++) {
                            matrizA1[x1][y1] = matrizA1[x1][y1] - c1 * matrizA1[i][y1];
                        }
                        r[x1] = r[x1] - c1 * r[i];
                    }// fin if
                }/// buble x1
            }// fin bucle i

            /**
             * nesitamos que la matriz C sea de la forma
             *
             * |- -| | 0 | | 1 | | 1 | | . | | . | =C | . | | . | | 1 | | 0 | |-
             * -|(n+1)x1 Note que por las condiciones de frotera las componentes
             * Cjo=0 y Cjn=0
             */
            double cj[] = new double[puntos];
            cj[0] = 0;
            cj[puntos - 1] = 0;
            for (int i = 1; i < puntos - 1; i++) {
                cj[i] = r[i - 1];
            }

            /**
             * los polinomios de Splin cubicos esta dadas por la siguiente
             * expresion Sj(X)=aj+bj(x-xj)+cj(x-xj)^2 +dj(x-xj)^3, donde las
             * aj=y[j]
             */
            double bj[] = new double[puntos - 1];
            double dj[] = new double[puntos - 1];
            for (int i = 0; i < puntos - 1; i++) {
                bj[i] = ((y[i + 1] - y[i]) / h[i]) - ((h[i] * (2 * cj[i] + cj[i + 1])) / 3);
                dj[i] = (cj[i + 1] - cj[i]) / (3 * h[i]);
            }

            String fun = "";

            for (int j = 0; j < puntos - 1; j++) {
                String signo = "-";
                if (x[j] < 0) {
                    signo = "";
                }
                switch (grado) {
                    case 1:
                        fun = ("(" + cj[j] + ")(x" + j + signo + x[j] + ")+ ( " + dj[j] + ")(x" + j + signo + x[j] + ")");
                        break;
                    case 2:
                        fun = ("(" + bj[j] + ")(" + j + signo + x[j] + ")  +  (" + cj[j] + ")(x" + j + signo + x[j] + ")+ ( " + dj[j] + ")(x" + j + signo + x[j] + ")^2");
                        break;
                    case 3:
                        fun = (y[j] + " + (" + bj[j] + ")(x" + j + signo + x[j] + ")  +  (" + cj[j] + ")(x" + j + signo + x[j] + ")^2 + ( " + dj[j] + ")(x" + j + signo + x[j] + ")^3");
                        break;
                }
                String ec = poli(fun);
                jTextArea.append(ec + "\n");
            }

            InterpolacionPorSplinesCubicos.cj = cj;
            InterpolacionPorSplinesCubicos.bj = bj;
            InterpolacionPorSplinesCubicos.dj = dj;

        } // try
        catch (Exception e) {
            JOptionPane.showMessageDialog(null, "error lectura de datos");
        }

    }// fin del metodo splines
    JEP j = new JEP();
    XJep xj = new XJep();
//    PolynomialCreator pc = new PolynomialCreator(xj);
    PolynomialCreator pc = new PolynomialCreator(xj);

    public void Polynomial() {
        xj.setAllowUndeclared(true);
        xj.setImplicitMul(true);
        j.addStandardConstants();
        j.addStandardFunctions();
        j.addComplex();
        j.setImplicitMul(true);
    }

    public String poli(String cad) {

        String pol = "";

        try {
            Node n = xj.parse(cad);
            n = xj.preprocess(n);
            Node sim = pc.expand(n);
            pol = xj.toString(sim);

            pol = pol.replaceAll("\\+-", " - ");
            pol = pol.replaceAll("\\+", " + ");
            pol = pol.replaceAll("\\*", "");
            return pol;
        } catch (Exception e) {
            return "ERROR NO PUEDO HACER ESTO DEL POLINOMIO XD ";
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterpolacionPorSplinesCubicos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterpolacionPorSplinesCubicos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterpolacionPorSplinesCubicos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterpolacionPorSplinesCubicos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new InterpolacionPorSplinesCubicos().setVisible(true);
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmbGrado;
    private javax.swing.JComboBox<String> cmbPuntos;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextArea jTextArea;
    // End of variables declaration//GEN-END:variables
}
